BOOM_API_BASE=https://api.boom.example
BOOM_API_TOKEN=your-token
BOOM_ORG_ID=your-org-id
POOL_SIZE=50
POOL_TOLERANCE_MS=120000
# (Optional) CHECK_BATCH_SIZE=50  # if you still batch downstream processing
AUTH_SECRET=replace-with-strong-random-string
APP_URL=https://app.boomnow.com
RESOLVE_SECRET=your-resolve-secret
RESOLVE_BASE_URL=https://app.boomnow.com
LIST_LIMIT_PARAM=limit
LIST_OFFSET_PARAM=page
PAGE_SIZE=30
# CHECK_LIMIT=60  # (optional override)

# The messages endpoint used by cron/check to fetch a conversation thread.
# Use the {{conversationId}} placeholder; the scripts will inject the id/uuid.
# This matches the UI deep link shape (?conversation=<uuid>).
MESSAGES_URL=https://app.boomnow.com/api/guest-experience/messages?conversation={{conversationId}}
MESSAGES_METHOD=GET
#
# Deterministic UUID namespace for minted fallbacks
CONVERSATION_UUID_NAMESPACE=3f3aa693-5b5d-4f6a-9c8e-7b7a1d1d8b7a

# Redirector + link signing (Ed25519)
ALERT_LINK_BASE=https://go.boomnow.com
TARGET_APP_URL=https://app.boomnow.com
LINK_PRIVATE_JWK='{"crv":"Ed25519","d":"REPLACE","kty":"OKP","x":"REPLACE"}'
LINK_PUBLIC_JWKS='{"keys":[{"crv":"Ed25519","kty":"OKP","x":"REPLACE","use":"sig","alg":"EdDSA","kid":"link-1"}]}'
LINK_JWKS_URL=https://go.boomnow.com/.well-known/jwks.json
LINK_KID=link-1
LINK_ISSUER=sla-check
LINK_AUDIENCE=boom-app
# Generate dev keys with:
#   node -e "const { generateKeyPairSync } = require('crypto'); const { exportJWK } = require('jose'); const { publicKey, privateKey } = generateKeyPairSync('ed25519'); exportJWK(privateKey).then((priv) => { exportJWK(publicKey).then((pub) => { console.log('private', JSON.stringify(priv)); console.log('public', JSON.stringify(pub)); }); });"

# Optional single-use enforcement
# REDIS_URL=redis://localhost:6379
REQUIRE_SIGNED_ALERT_LINKS=0  # set to 1 in production to forbid raw deep links
