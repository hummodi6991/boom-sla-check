name: Boom SLA check (debug)

on:
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      # Secrets & vars available to all steps
      BOOM_USER: ${{ secrets.BOOM_USER }}
      BOOM_PASS: ${{ secrets.BOOM_PASS }}
      BOOM_BEARER: ${{ secrets.BOOM_BEARER }}
      BOOM_COOKIE: ${{ secrets.BOOM_COOKIE }}
      LOGIN_URL: ${{ vars.LOGIN_URL }}
      LOGIN_PREP_URL: ${{ vars.LOGIN_PREP_URL }}
      LOGIN_METHOD: ${{ vars.LOGIN_METHOD }}
      CONVERSATIONS_URL: ${{ vars.CONVERSATIONS_URL }}
      CONVERSATIONS_METHOD: ${{ vars.CONVERSATIONS_METHOD }}
      MESSAGES_URL: ${{ vars.MESSAGES_URL }}
      MESSAGES_METHOD: ${{ vars.MESSAGES_METHOD }}
      DEBUG: ${{ vars.DEBUG }}
      DEBUG_MESSAGES: ${{ vars.DEBUG_MESSAGES }}
      DEFAULT_CONVERSATION_ID: ${{ vars.DEFAULT_CONVERSATION_ID }}
      APP_URL: https://app.boomnow.com
      LINK_SECRET: ${{ secrets.LINK_SECRET }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps
        working-directory: .
        run: |
          ls -la
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install --no-fund --no-audit
          fi

      - name: Debug conversations endpoint (with auth)
        continue-on-error: true
        shell: bash
        env:
          BOOM_BEARER: ${{ secrets.BOOM_BEARER }}
          BOOM_COOKIE: ${{ secrets.BOOM_COOKIE }}
          CONVERSATIONS_URL: ${{ vars.CONVERSATIONS_URL }}
          MESSAGES_URL: ${{ vars.MESSAGES_URL }}
        run: |
          # Don't fail the job even if this probe 401s
          set -euo pipefail
          echo "CONVERSATIONS_URL=${CONVERSATIONS_URL}"
          echo "MESSAGES_URL=${MESSAGES_URL}"
          echo "--- RESPONSE STATUS + HEADERS ---"

          # Normalise URLs to avoid stray CR/whitespace from repo variables
          conv="$(printf '%s' "${CONVERSATIONS_URL:-}" | tr -d '\r' | xargs)"
          msgs="$(printf '%s' "${MESSAGES_URL:-}" | tr -d '\r' | xargs)"

          # Prefer conversations URL, then messages, then a sane default
          if [[ -z "$conv" ]]; then
            conv="$msgs"
          fi
          if [[ -z "$conv" ]]; then
            conv="https://app.boomnow.com/api/conversations/all"
          fi
          if [[ "$conv" != *\?* && "$conv" == */all ]]; then
            conv="${conv}?all=true"
          fi

          # Ignore any pre-set AUTH_HEADER; it causes arg-splitting in curl
          unset AUTH_HEADER || true
          header=""
          if [[ -n "${BOOM_BEARER:-}" ]]; then
            echo "Using Bearer auth"
            bb=$(printf '%s' "${BOOM_BEARER}" | tr -d '\r\n')
            header="Authorization: Bearer ${bb}"
          elif [[ -n "${BOOM_COOKIE:-}" ]]; then
            echo "Using Cookie auth"
            ck=$(printf '%s' "${BOOM_COOKIE}" | tr -d '\r\n')
            header="Cookie: ${ck}"
          else
            echo "No auth provided; expect 401"
          fi

          hdrs=(-H "Accept: application/json" -H "User-Agent: curl/7" -H "Referer: https://app.boomnow.com/" -H "X-Requested-With: XMLHttpRequest")
          if [[ -n "$header" ]]; then
            hdrs+=(-H "$header")
          fi

          curl --globoff -sS -D - -o /dev/null "${hdrs[@]}" "$conv" || true
          if [[ -n "$msgs" ]]; then
            echo
            curl --globoff -sS -D - -o /dev/null "${hdrs[@]}" "$msgs" || true
          fi

      - name: Build conversation id & messages URL
        shell: bash
        run: |
          set -euo pipefail
          id="${DEFAULT_CONVERSATION_ID:-}"
          # extract UUID if a full UI or API URL was provided
          if [[ "$id" == *'?conversation='* ]]; then
            id="${id##*?conversation=}"; id="${id%%&*}"
          elif [[ "$id" == *'/conversations/'* ]]; then
            id="${id##*/conversations/}"; id="${id%%[/?]*}"
          fi
          if [[ -z "$id" ]]; then
            echo "No DEFAULT_CONVERSATION_ID set"; exit 1
          fi
          echo "CONVERSATION_ID=$id" >> "$GITHUB_ENV"
          # rebuild MESSAGES_URL to include the required query param
          base="${MESSAGES_URL:-https://app.boomnow.com/api/guest-experience/messages}"
          base="$(printf '%s' "$base" | tr -d '\r' | xargs)"
          sep='?'; [[ "$base" == *\?* ]] && sep='&'
          built="${base}${sep}conversation=${id}"
          echo "MESSAGES_URL=$built" >> "$GITHUB_ENV"
          echo "Using conversation id: $id"
          echo "Built messages URL: $built"

      - name: Run SLA checker
        env:
          BOOM_USER: ${{ secrets.BOOM_USER }}
          BOOM_PASS: ${{ secrets.BOOM_PASS }}
          BOOM_BEARER: ${{ secrets.BOOM_BEARER }}
          BOOM_COOKIE: ${{ secrets.BOOM_COOKIE }}
          LOGIN_URL: ${{ vars.LOGIN_URL }}
          LOGIN_PREP_URL: ${{ vars.LOGIN_PREP_URL }}
          LOGIN_METHOD: ${{ vars.LOGIN_METHOD }}
          CONVERSATIONS_URL: ${{ vars.CONVERSATIONS_URL }}
          CONVERSATIONS_METHOD: ${{ vars.CONVERSATIONS_METHOD }}
          # MESSAGES_URL is overridden by the "Build conversation id" step
          MESSAGES_URL: ${{ env.MESSAGES_URL }}
          MESSAGES_METHOD: ${{ vars.MESSAGES_METHOD }}
          DEBUG: ${{ vars.DEBUG }}
          DEBUG_MESSAGES: ${{ vars.DEBUG_MESSAGES }}
        run: node ./check.mjs
