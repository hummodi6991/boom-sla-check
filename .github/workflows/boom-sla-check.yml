name: Boom SLA check (debug)

on:
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    env:
      # Secrets & vars available to all steps
      BOOM_USER: ${{ secrets.BOOM_USER }}
      BOOM_PASS: ${{ secrets.BOOM_PASS }}
      BOOM_BEARER: ${{ secrets.BOOM_BEARER }}
      BOOM_COOKIE: ${{ secrets.BOOM_COOKIE }}
      LOGIN_URL: ${{ vars.LOGIN_URL }}
      LOGIN_PREP_URL: ${{ vars.LOGIN_PREP_URL }}
      LOGIN_METHOD: ${{ vars.LOGIN_METHOD }}
      CONVERSATIONS_URL: ${{ vars.CONVERSATIONS_URL }}
      CONVERSATIONS_METHOD: ${{ vars.CONVERSATIONS_METHOD }}
      MESSAGES_URL: ${{ vars.MESSAGES_URL }}
      MESSAGES_METHOD: ${{ vars.MESSAGES_METHOD }}
      DEBUG: ${{ vars.DEBUG }}
      DEBUG_MESSAGES: ${{ vars.DEBUG_MESSAGES }}
      DEFAULT_CONVERSATION_ID: ${{ vars.DEFAULT_CONVERSATION_ID }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps
        working-directory: .
        run: |
          ls -la
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install --no-fund --no-audit
          fi

      - name: Debug conversations endpoint
        continue-on-error: true
        shell: bash
        env:
          BOOM_BEARER: ${{ secrets.BOOM_BEARER }}
          BOOM_COOKIE: ${{ secrets.BOOM_COOKIE }}
          CONVERSATIONS_URL: ${{ vars.CONVERSATIONS_URL }}
          MESSAGES_URL: ${{ vars.MESSAGES_URL }}
        run: |
          # don't fail the job even if this probe 401s
          set -uo pipefail
          # Prefer conversations URL, fall back to messages, then a sane default
          base="${CONVERSATIONS_URL:-${MESSAGES_URL:-https://app.boomnow.com/api/conversations/all}}"
          base="$(printf '%s' "$base" | tr -d '\r' | xargs)"
          # Only add ?all=true if there's no query AND the path ends with /all
          url="$base"
          if [[ "$base" != *\?* && "$base" == */all ]]; then
            url="${base}?all=true"
          fi
          echo "Hitting (sanitized): $url"
          hdrs=(-H 'Accept: application/json' -H 'User-Agent: curl/7' -H 'Referer: https://app.boomnow.com/' -H 'X-Requested-With: XMLHttpRequest')
          if [[ -n "${BOOM_BEARER:-}" ]]; then
            echo "Using Bearer auth"
            hdrs+=(-H "Authorization: Bearer ${BOOM_BEARER}")
          elif [[ -n "${BOOM_COOKIE:-}" ]]; then
            echo "Using Cookie auth"
            hdrs+=(-H "Cookie: ${BOOM_COOKIE}")
          else
            echo "No auth provided; expect 401"
          fi
          # never fail the job here, even on 401
          code=$(curl -sS --globoff -o /tmp/resp.json -w '%{http_code}' "${hdrs[@]}" "$url" || true) || true
          echo "HTTP $code"
          head -c 400 /tmp/resp.json || true

      - name: Build conversation id & messages URL
        shell: bash
        run: |
          set -euo pipefail
          id="${DEFAULT_CONVERSATION_ID:-}"
          # extract UUID if a full UI or API URL was provided
          if [[ "$id" == *'?conversation='* ]]; then
            id="${id##*?conversation=}"; id="${id%%&*}"
          elif [[ "$id" == *'/conversations/'* ]]; then
            id="${id##*/conversations/}"; id="${id%%[/?]*}"
          fi
          if [[ -z "$id" ]]; then
            echo "No DEFAULT_CONVERSATION_ID set"; exit 1
          fi
          echo "CONVERSATION_ID=$id" >> "$GITHUB_ENV"
          # rebuild MESSAGES_URL to include the required query param
          base="${MESSAGES_URL:-https://app.boomnow.com/api/guest-experience/messages}"
          base="$(printf '%s' "$base" | tr -d '\r' | xargs)"
          sep='?'; [[ "$base" == *\?* ]] && sep='&'
          built="${base}${sep}conversation=${id}"
          echo "MESSAGES_URL=$built" >> "$GITHUB_ENV"
          echo "Using conversation id: $id"
          echo "Built messages URL: $built"

      - name: Run SLA checker
        env:
          BOOM_USER: ${{ secrets.BOOM_USER }}
          BOOM_PASS: ${{ secrets.BOOM_PASS }}
          BOOM_BEARER: ${{ secrets.BOOM_BEARER }}
          BOOM_COOKIE: ${{ secrets.BOOM_COOKIE }}
          LOGIN_URL: ${{ vars.LOGIN_URL }}
          LOGIN_PREP_URL: ${{ vars.LOGIN_PREP_URL }}
          LOGIN_METHOD: ${{ vars.LOGIN_METHOD }}
          CONVERSATIONS_URL: ${{ vars.CONVERSATIONS_URL }}
          CONVERSATIONS_METHOD: ${{ vars.CONVERSATIONS_METHOD }}
          # MESSAGES_URL is overridden by the "Build conversation id" step
          MESSAGES_URL: ${{ env.MESSAGES_URL }}
          MESSAGES_METHOD: ${{ vars.MESSAGES_METHOD }}
          DEBUG: ${{ vars.DEBUG }}
          DEBUG_MESSAGES: ${{ vars.DEBUG_MESSAGES }}
        run: node ./check.mjs
