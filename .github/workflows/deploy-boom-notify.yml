name: Deploy boom-notify
on:
  push:
    paths:
      - 'azure/boom-notify/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps (function dir)
        working-directory: azure/boom-notify
        run: |
          npm install --omit=dev
          npm prune --omit=dev

      - name: Package function (zip)
        working-directory: azure/boom-notify
        run: |
          rm -f ../functionapp.zip
          # include node_modules so the app runs without remote build
          zip -r ../functionapp.zip host.json package.json node_modules boom-notify
          ls -lh ../functionapp.zip

      - name: Install xmllint
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-utils

      - name: Parse publish profile (ZipDeploy)
        id: parse
        shell: bash
        env:
          PUBLISH_PROFILE: ${{ secrets.AZURE_FUNC_PUBLISH_PROFILE }}
        run: |
          PP_FILE=$(mktemp)
          echo "$PUBLISH_PROFILE" > "$PP_FILE"
          SCM_URL=$(xmllint --xpath "string(//publishProfile[@publishMethod='ZipDeploy']/@publishUrl)" "$PP_FILE")
          USER=$(xmllint    --xpath "string(//publishProfile[@publishMethod='ZipDeploy']/@userName)"   "$PP_FILE")
          PASS=$(xmllint    --xpath "string(//publishProfile[@publishMethod='ZipDeploy']/@userPWD)"    "$PP_FILE")
          echo "scm=$SCM_URL" >> $GITHUB_OUTPUT
          echo "user=$USER"   >> $GITHUB_OUTPUT
          echo "pass=$PASS"   >> $GITHUB_OUTPUT

      - name: ZipDeploy to Kudu (publish profile)
        working-directory: azure/boom-notify
        shell: bash
        run: |
          curl -sS -u "${{ steps.parse.outputs.user }}:${{ steps.parse.outputs.pass }}" \
            -X POST \
            -H "Content-Type: application/zip" \
            --data-binary @"../functionapp.zip" \
            "https://${{ steps.parse.outputs.scm }}/api/zipdeploy" | jq .
