name: Deploy boom-notify
on:
  push:
    paths:
      - 'azure/boom-notify/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps (function dir)
        working-directory: azure/boom-notify
        run: npm ci

      - name: Package function (zip)
        run: |
          cd azure/boom-notify
          zip -r ../functionapp.zip host.json boom-notify package.json package-lock.json
          ls -lh ../functionapp.zip

      - name: Parse publish profile (ZipDeploy)
        env:
          PUBLISH_PROFILE: ${{ secrets.AZURE_FUNC_PUBLISH_PROFILE }}
        run: |
          python3 - <<'PY'
          import os, xml.etree.ElementTree as ET
          xml = os.environ['PUBLISH_PROFILE']
          root = ET.fromstring(xml)
          user = pwd = scm = ""
          for pp in root.findall('.//publishProfile'):
              if pp.get('publishMethod') == 'ZipDeploy':
                  user = (pp.get('userName') or "").strip()
                  pwd  = (pp.get('userPWD') or "").strip()
                  scm  = (pp.get('publishUrl') or "").strip()
                  break
          if not (user and pwd and scm):
              raise SystemExit("ZipDeploy entry not found or incomplete in publish profile")
          with open(os.environ['GITHUB_ENV'], 'a') as f:
              f.write(f"KUDU_USER={user}\n")
              f.write(f"KUDU_PWD={pwd}\n")
              f.write(f"KUDU_SCM={scm}\n")
          PY
          echo "::add-mask::$KUDU_USER" || true
          echo "::add-mask::$KUDU_PWD"  || true

      - name: ZipDeploy to Kudu
        env:
          KUDU_USER: ${{ env.KUDU_USER }}
          KUDU_PWD:  ${{ env.KUDU_PWD }}
          KUDU_SCM:  ${{ env.KUDU_SCM }}
        run: |
          set -euo pipefail
          echo "Kudu endpoint: $KUDU_SCM"
          curl --fail --show-error --silent \
               --http1.1 \
               -H "Content-Type: application/zip" \
               -H "Expect:" \
               --retry 5 --retry-delay 2 --retry-connrefused \
               --max-time 600 \
               -u "$KUDU_USER:$KUDU_PWD" \
               --data-binary @azure/functionapp.zip \
               "$KUDU_SCM/api/zipdeploy?isAsync=true"

          echo "Uploaded. Polling deployment status..."
          for i in $(seq 1 40); do
            sleep 3
            STATUS_JSON="$(curl -sS -u "$KUDU_USER:$KUDU_PWD" "$KUDU_SCM/api/deployments/latest")" || true
            (command -v jq >/dev/null 2>&1 && echo "$STATUS_JSON" | jq -r '.status, .progress, .complete') || echo "$STATUS_JSON"
            echo "---"
          done

