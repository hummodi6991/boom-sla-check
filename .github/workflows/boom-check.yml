# .github/workflows/boom-check.yml
name: Boom SLA check

on:
  # Manual (button) + API (Power Automate) trigger only
  workflow_dispatch:
    inputs:
      conversation:
        description: "Optional: Boom conversation URL to open"
        required: false
        type: string

permissions:
  contents: read

concurrency:
  group: boom-sla-check
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  run-check:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      # Core creds
      BOOM_USER: ${{ secrets.BOOM_USER }}
      BOOM_PASS: ${{ secrets.BOOM_PASS }}

      # Optional selector/feature flags you already store
      AGENT_SIDE: ${{ secrets.AGENT_SIDE }}

      # SMTP (sender is SMTP_USER; display name is FROM_NAME)
      SMTP_HOST: ${{ secrets.SMTP_HOST }}
      SMTP_PORT: ${{ secrets.SMTP_PORT }}
      SMTP_USER: ${{ secrets.SMTP_USER }}
      SMTP_PASS: ${{ secrets.SMTP_PASS }}
      FROM_NAME: ${{ secrets.FROM_NAME }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Resolve conversation URL (input or secret fallback)
        run: |
          if [ -n "${{ github.event.inputs.conversation }}" ]; then
            echo "CONVERSATION_URL=${{ github.event.inputs.conversation }}" >> $GITHUB_ENV
          elif [ -n "${{ secrets.CONVERSATION_URL }}" ]; then
            echo "CONVERSATION_URL=${{ secrets.CONVERSATION_URL }}" >> $GITHUB_ENV
          else
            echo "No CONVERSATION_URL provided (ok if check.js handles discovery)."
          fi

      - name: Resolve recipients (ALERT_TO / ALERT_CC with fallbacks)
        run: |
          to="${{ secrets.ALERT_TO }}"
          cc="${{ secrets.ALERT_CC }}"
          # Back-compat fallbacks to your existing secrets
          if [ -z "$to" ] && [ -n "${{ secrets.ROHIT_EMAIL }}" ]; then
            to="${{ secrets.ROHIT_EMAIL }}"
          fi
          # As a safety net, if still empty, send to the SMTP_USER itself
          if [ -z "$to" ] && [ -n "${{ secrets.SMTP_USER }}" ]; then
            to="${{ secrets.SMTP_USER }}"
          fi
          echo "ALERT_TO=$to" >> $GITHUB_ENV
          echo "ALERT_CC=$cc" >> $GITHUB_ENV

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Install Playwright Chromium (with system deps)
        run: npx playwright install --with-deps chromium

      - name: Run Playwright checker
        # check.js should read creds from env; we also pass the conversation explicitly if present
        run: |
          if [ -n "${CONVERSATION_URL:-}" ]; then
            node check.js --conversation "${CONVERSATION_URL}"
          else
            node check.js
          fi

      - name: Upload page artifacts (if any)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: boom-sla-artifacts
          path: |
            /tmp/shot_*.png
            /tmp/page_*.html
          if-no-files-found: ignore
