name: Boom SLA (API, REST)

on:
  schedule:
    - cron: "*/5 * * * *"     # every 5 minutes
  workflow_dispatch:
    inputs:
      conversation:
        description: "Optional: Boom conversation page URL to check"
        required: false

jobs:
  check:
    runs-on: ubuntu-latest
    timeout-minutes: 6
    env:
      # --- Your existing secrets (leave names as-is) ---
      BOOM_USER: ${{ secrets.BOOM_USER }}
      BOOM_PASS: ${{ secrets.BOOM_PASS }}
      SMTP_HOST: ${{ secrets.SMTP_HOST }}
      SMTP_PORT: ${{ secrets.SMTP_PORT }}
      SMTP_USER: ${{ secrets.SMTP_USER }}
      SMTP_PASS: ${{ secrets.SMTP_PASS }}
      ALERT_TO:  ${{ secrets.ALERT_TO }}
      ALERT_FROM_NAME: ${{ secrets.ALERT_FROM_NAME }}

      # --- Login mechanics (from your capture) ---
      LOGIN_URL: "https://app.boomnow.com/api/login"
      LOGIN_METHOD: "POST"
      LOGIN_CT: "application/json"
      LOGIN_EMAIL_FIELD: "email"
      LOGIN_PASSWORD_FIELD: "password"
      LOGIN_TENANT_FIELD: "tenant_id"        # Boom expects tenant_id (weâ€™ll send null)
      CSRF_HEADER_NAME: ""                   # leave blank (not needed for this login)
      CSRF_COOKIE_NAME: ""                   # leave blank (not needed for this login)

      # --- Messages (REST) ---
      API_KIND: "rest"
      # Use a template with {{conversationId}} so we can check any thread you pass in
      MESSAGES_URL: "https://app.boomnow.com/api/conversations/{{conversationId}}"
      MESSAGES_METHOD: "GET"

      # SLA + options
      SLA_MINUTES: "5"
      COUNT_AI_SUGGESTION_AS_AGENT: "false"  # AI suggestions do NOT silence alerts
      # From the manual Run workflow input (optional)
      CONVERSATION_URL: ${{ github.event.inputs.conversation }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install deps
        run: npm i nodemailer@6

      - name: Run SLA checker
        run: node check.mjs
