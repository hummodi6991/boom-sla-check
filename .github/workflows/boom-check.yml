# .github/workflows/boom-check.yml
name: Boom SLA Check

on:
  repository_dispatch:
    types: [boom-sla-trigger]   # Triggered by Power Automate
  workflow_dispatch:
    inputs:
      conversation:
        description: "Conversation (UI URL / API URL / UUID). Optional if DEFAULT_CONVERSATION_ID is set."
        required: false

jobs:
  check:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    env:
      # Secrets
      BOOM_USER:  ${{ secrets.BOOM_USER }}
      BOOM_PASS:  ${{ secrets.BOOM_PASS }}
      SMTP_HOST:  ${{ secrets.SMTP_HOST }}
      SMTP_PORT:  ${{ secrets.SMTP_PORT }}
      SMTP_USER:  ${{ secrets.SMTP_USER }}
      SMTP_PASS:  ${{ secrets.SMTP_PASS }}

      # Repo variables
      ALERT_TO:   ${{ vars.ALERT_TO }}
      ALERT_FROM_NAME: ${{ vars.ALERT_FROM_NAME }}

      LOGIN_URL:  ${{ vars.LOGIN_URL }}
      LOGIN_METHOD: ${{ vars.LOGIN_METHOD }}
      LOGIN_CT:   ${{ vars.LOGIN_CT }}
      LOGIN_EMAIL_FIELD: ${{ vars.LOGIN_EMAIL_FIELD }}
      LOGIN_PASSWORD_FIELD: ${{ vars.LOGIN_PASSWORD_FIELD }}
      LOGIN_TENANT_FIELD: ${{ vars.LOGIN_TENANT_FIELD }}
      CSRF_HEADER_NAME: ${{ vars.CSRF_HEADER_NAME }}
      CSRF_COOKIE_NAME: ${{ vars.CSRF_COOKIE_NAME }}

      API_KIND:   ${{ vars.API_KIND }}
      MESSAGES_URL: ${{ vars.MESSAGES_URL }}
      MESSAGES_METHOD: ${{ vars.MESSAGES_METHOD }}
      SLA_MINUTES: ${{ vars.SLA_MINUTES }}
      COUNT_AI_SUGGESTION_AS_AGENT: ${{ vars.COUNT_AI_SUGGESTION_AS_AGENT }}

      DEFAULT_CONVERSATION_ID: ${{ vars.DEFAULT_CONVERSATION_ID }}

      # Accept the conversation from either trigger type
      CONVERSATION_INPUT: ${{ github.event_name == 'repository_dispatch' && github.event.client_payload.conversation || github.event.inputs.conversation }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      # If you don't have package-lock.json, npm ci will fail.
      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then
            echo "Lockfile found -> npm ci"
            npm ci --omit=dev
          else
            echo "No lockfile -> npm install"
            npm install --omit=dev
          fi

      - name: Run SLA check
        run: node check.mjs
