name: Boom SLA check (manual)

on:
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      LOGIN_URL:       ${{ vars.LOGIN_URL }}
      LOGIN_METHOD:    ${{ vars.LOGIN_METHOD }}
      MESSAGES_URL:    ${{ vars.MESSAGES_URL }}
      MESSAGES_METHOD: ${{ vars.MESSAGES_METHOD }}
      SLA_MINUTES:     ${{ vars.SLA_MINUTES }}
      DEBUG:           ${{ vars.DEBUG }}
      DEBUG_MESSAGES:  ${{ vars.DEBUG_MESSAGES }}
      APP_URL: https://app.boomnow.com
      SMTP_HOST:       ${{ secrets.SMTP_HOST }}
      SMTP_PORT:       ${{ secrets.SMTP_PORT }}
      SMTP_USER:       ${{ secrets.SMTP_USER }}
      SMTP_PASS:       ${{ secrets.SMTP_PASS }}
      ALERT_TO:        ${{ secrets.ALERT_TO }}
      ALERT_FROM_NAME: ${{ secrets.ALERT_FROM_NAME }}
      LINK_SECRET:     ${{ secrets.LINK_SECRET }}
      BOOM_USER:       ${{ secrets.BOOM_USER }}
      BOOM_PASS:       ${{ secrets.BOOM_PASS }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install deps
        working-directory: .
        run: |
          ls -la
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install --no-fund --no-audit
          fi
      - name: Debug conversations endpoint (with auth)
        shell: bash
        env:
          CONVERSATIONS_URL: ${{ vars.CONVERSATIONS_URL }}
          MESSAGES_URL: ${{ vars.MESSAGES_URL }}
          BOOM_BEARER: ${{ secrets.BOOM_BEARER }}
          BOOM_COOKIE: ${{ secrets.BOOM_COOKIE }}
        run: |
          set -euo pipefail
          echo "CONVERSATIONS_URL=${CONVERSATIONS_URL}"
          echo "MESSAGES_URL=${MESSAGES_URL}"
          echo "--- RESPONSE STATUS + HEADERS ---"
          # Normalise URLs to avoid hidden CR/whitespace from repo variables
          conv="$(printf '%s' "${CONVERSATIONS_URL:-}" | tr -d '\r' | xargs)"
          msgs="$(printf '%s' "${MESSAGES_URL:-}" | tr -d '\r' | xargs)"
          # Ignore any pre-set AUTH_HEADER; it causes arg-splitting
          unset AUTH_HEADER || true
          # Build a single header from secrets; strip newlines
          HEADER=""
          if [[ -n "${BOOM_BEARER:-}" ]]; then
            BB=$(printf '%s' "${BOOM_BEARER}" | tr -d '\r\n')
            HEADER="Authorization: Bearer ${BB}"
          elif [[ -n "${BOOM_COOKIE:-}" ]]; then
            CK=$(printf '%s' "${BOOM_COOKIE}" | tr -d '\r\n')
            HEADER="Cookie: ${CK}"
          fi
          hdrs=(-H 'Accept: application/json' -H 'User-Agent: curl/7' -H 'X-Requested-With: XMLHttpRequest')
          if [[ -n "$HEADER" ]]; then
            hdrs+=(-H "$HEADER")
          fi
          curl --globoff -sS -D - -o /dev/null "${hdrs[@]}" "$conv"
          if [[ -n "$msgs" ]]; then
            echo
            curl --globoff -sS -D - -o /dev/null "${hdrs[@]}" "$msgs"
          fi

      - name: Run SLA checker
        working-directory: .
        run: node ./check.mjs
